name: Build and deploy
on: [push]
jobs:
  build_and_push:
    runs-on: ubuntu-22.04
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: build api image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/${{ secrets.API_NAME }}:$GITHUB_REF_NAME-$GITHUB_RUN_ID .
      - name: docker login
        run: echo ${{ secrets.DOCKER_TOKEN }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
      - name: push images
        run: docker push ${{ secrets.DOCKER_USERNAME }}/${{ secrets.API_NAME }}:$GITHUB_REF_NAME-$GITHUB_RUN_ID
  deploy:
    runs-on: ubuntu-22.04
    needs: build_and_push
    env:
      API_NAME: ${{ secrets.API_NAME }}
      FRONT_NAME: ${{ secrets.FRONT_NAME }}
      MAIN_DB_USER: ${{ secrets.DB_USER }}
      MAIN_DB_PASS: ${{ secrets.DB_PASSWORD }}
      MAIN_DB_NAME: ${{ secrets.DB_NAME }}
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: render configs
        run: |
          mkdir deploy
          cat docker-compose-ci.yaml | envsubst > deploy/docker-compose.yaml
          cat docker_config-ci.py | envsubst > deploy/docker_config.py
      - name: copy file via ssh-session
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          port: ${{ secrets.PORT }}
          source: "deploy/docker-compose.yaml,deploy/docker_config.py"
          target: "cinema_app"
          strip_components: 1
      - name: deploy application
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          port: ${{ secrets.PORT }}
          script: |
            cd cinema_app
            echo ${{ secrets.PASSWORD }} | sudo -S docker-compose pull
            echo ${{ secrets.PASSWORD }} | sudo -S docker-compose up -d
